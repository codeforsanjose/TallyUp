AWSTemplateFormatVersion: 2010-09-09
Description: >-
  tally-up-backend
Transform:
  - AWS::Serverless-2016-10-31

Globals:
  Function:
    Runtime: nodejs22.x
    Architectures:
      - x86_64
    MemorySize: 128
    Timeout: 100
    Handler: index.handler

Parameters:
  TallyUpDomainPrefix:
    Type: String
    Description: Domain for Tally Up
    Default: tallyup-pool

Resources:
  apiMain:
    Type: AWS::Serverless::HttpApi
    Properties:
      Description: API for Tally Up
      StageName: prod
      FailOnWarnings: true
  openApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist/build/openApiFunction
      Events:
        ApiEvent:
          Type: HttpApi
          Properties:
            ApiId: !Ref apiMain
            Method: GET
            Path: /api/openapi.yaml
            TimeoutInMillis: 5000
  loginFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist/build/loginFunction
      Events:
        ApiEvent:
          Type: HttpApi
          Properties:
            ApiId: !Ref apiMain
            Method: POST
            Path: /api/login
            TimeoutInMillis: 5000
      Policies:
        - AmazonCognitoPowerUser
      Environment:
        Variables:
          USER_POOL_CLIENT_ID: !Ref cognitoUserPoolClient
  registerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist/build/registerFunction
      Events:
        ApiEvent:
          Type: HttpApi
          Properties:
            ApiId: !Ref apiMain
            Method: POST
            Path: /api/register
            TimeoutInMillis: 5000
      Policies:
        - AmazonCognitoPowerUser
      Environment:
        Variables:
          USER_POOL_CLIENT_ID: !Ref cognitoUserPoolClient
  cognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_email
            Priority: 1
      AutoVerifiedAttributes:
        - email
      DeletionProtection: INACTIVE # TODO: Set to ACTIVE in production
      EmailConfiguration:
        EmailSendingAccount: COGNITO_DEFAULT # TODO: Set to DEVELOPER when domain is verified
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
      Schema:
        - Name: email
          Required: true
          Mutable: true
      UserAttributeUpdateSettings:
        AttributesRequireVerificationBeforeUpdate:
          - email
      UsernameAttributes:
        - email
      UsernameConfiguration:
        CaseSensitive: false
      UserPoolName: tally-up-user-pool
      VerificationMessageTemplate:
        DefaultEmailOption: CONFIRM_WITH_LINK
      UserPoolTier: LITE # https://github.com/aws/serverless-application-model/issues/3726
  cognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref cognitoUserPool
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthFlows:
        - code
      AllowedOAuthScopes:
        - email
        - openid
      CallbackURLs:
        - https://jwt.io
      DefaultRedirectURI: https://jwt.io
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
      SupportedIdentityProviders:
        - COGNITO
  cognitoUserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: !Ref TallyUpDomainPrefix
      UserPoolId: !Ref cognitoUserPool
      ManagedLoginVersion: 1 # https://github.com/aws/serverless-application-model/issues/3726 basically this issue but for all of cognito
  indexDotHtml:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      WebsiteConfiguration:
        ErrorDocument: index.html
        IndexDocument: index.html
  indexDotHtmlPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref indexDotHtml
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: '*'
            Action:
              - s3:GetObject
            Resource: !Sub 'arn:${AWS::Partition}:s3:::${indexDotHtml}/*'
  cloudfrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - Id: indexDotHtml
            CustomOriginConfig:
              OriginProtocolPolicy: http-only
            DomainName: !Sub '${indexDotHtml}.s3-website-${AWS::Region}.amazonaws.com'
          - Id: apiMain
            CustomOriginConfig:
              OriginProtocolPolicy: https-only
            DomainName: !Sub '${apiMain}.execute-api.${AWS::Region}.amazonaws.com'
            OriginPath: /prod
        Enabled: true
        CacheBehaviors:
          - PathPattern: /api/*
            TargetOriginId: apiMain
            ViewerProtocolPolicy: redirect-to-https
            OriginRequestPolicyId: b689b0a8-53d0-40ab-baf2-68738e2966ac # AllViewerExceptHostHeader
            CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad # CachingDisabled TODO: Set to CachingOptimized when API is ready
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - POST
              - PATCH
              - DELETE
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          TargetOriginId: indexDotHtml
          ViewerProtocolPolicy: redirect-to-https
          Compress: true
          CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad
          OriginRequestPolicyId: b689b0a8-53d0-40ab-baf2-68738e2966ac # AllViewerExceptHostHeader
        PriceClass: PriceClass_100
        ViewerCertificate:
          CloudFrontDefaultCertificate: true

Outputs:
  S3BucketName:
    Description: S3 bucket name for index.html
    Value: !Ref indexDotHtml
  CloudFrontDistributionUrl:
    Description: CloudFront distribution URL for index.html
    Value: !GetAtt cloudfrontDistribution.DomainName
  TallyUpDomain:
    Description: Domain for Tally Up
    Value: !Sub 'https://${TallyUpDomainPrefix}.auth.${AWS::Region}.amazoncognito.com'
