services:
  db:
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      retries: 5
      start_period: 30s
    ports:
      - '5432:5432'
  neonDbProxy:
    image: ghcr.io/timowilhelm/local-neon-http-proxy:main
    environment:
      PG_CONNECTION_STRING: postgres://postgres:postgres@db:5432/postgres
    ports:
      - '4444:4444'
    depends_on:
      db:
        condition: service_healthy
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    depends_on:
      - neonDbProxy
    volumes:
      - .:/app
      - api_node_modules:/app/node_modules
    pull_policy: build
    command: ['bun', '--hot', 'run', './scripts/dev']
    extra_hosts:
      - 'db.localtest.me:host-gateway'
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://postgres:postgres@db:5432
      - DB_URL_SECRET_ARN=DB_URL
      - DB_URL=postgres://postgres:postgres@db.localtest.me:5432/postgres
      - JWT_SECRET_ARN=JWT_SECRET
      - JWT_SECRET=supersecret
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    depends_on:
      - api
    ports:
      - '5173:5173'
    command: ['bun', 'run', 'scripts/dev', '--host=0.0.0.0']

volumes:
  db_data:
    driver: local
  api_node_modules:
    driver: local
  frontend_node_modules:
    driver: local
